{"version":3,"sources":["scripts/main.js"],"names":["table","document","querySelector","cells","querySelectorAll","start","textStart","textLose","textWin","score","rows","arr","checkHorizontalAudit","elem","i","length","j","checkVerticalAudit","massFunc","randomMain","a","Math","floor","random","innerText","x","y","placing","Number","innerHTML","cellIndex","placingWithProbability","b","classList","add","addEventListener","e","key","part","JSON","parse","stringify","sort","countNumbersLeft","undefined","secondNumberPrevLeft","secondNumberCurrentLeft","splice","scoreRecLeft","push","children","remove","z","checkHorizontal","checkVertical","countPairNumbers","countNumbersRight","secondNumberNextRight","secondNumberCurrentRight","scoreRecRight","unshift","mass","countNumbersUp","arraY","secondNumberPrevUp","secondNumberCurrentUp","scoreRecUp","countNumbersDown","secondNumberNextDown","secondNumberCurrentDown","scoreRecDown","item","target","contains","setAttribute","r","c","cell"],"mappings":"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","file":"main.3999a72d.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst table = document.querySelector('table');\nconst cells = document.querySelectorAll('td');\nconst start = document.querySelector('.start');\nconst textStart = document.querySelector('.message-start');\nconst textLose = document.querySelector('.message-lose');\nconst textWin = document.querySelector('.message-win');\nconst score = document.querySelector('.game-score');\nconst rows = table.rows;\nconst arr = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]];\n\ndocument.addEventListener('keydown', (e) => {\n  if (e.key === 'ArrowLeft') {\n    const part = JSON.parse(JSON.stringify(arr));\n\n    for (let i = 0; i < arr.length; i++) {\n      arr[i].sort(function sortLeft(x, y) {\n        if (x > 0 && y > 0) {\n\n        } else {\n          return y - x;\n        }\n      });\n    }\n\n    if (JSON.stringify(part) !== JSON.stringify(arr)) {\n      let countNumbersLeft = 1;\n\n      for (let i = 0; i < arr.length; i++) {\n        for (let j = 0; j < arr[i].length; j++) {\n          if (arr[i][j] > 0 && arr[i][j - 1] > 0) {\n            if (arr[i][j - 1] === arr[i][j] && arr[i][j - 1] !== undefined) {\n              const secondNumberPrevLeft = arr[i][j - 1];\n              const secondNumberCurrentLeft = arr[i][j];\n\n              arr[i][j - 1] = arr[i][j] * 2;\n              arr[i].splice(j, 1);\n\n              const scoreRecLeft = score.innerText;\n\n              score.innerText = secondNumberPrevLeft * 2 + Number(scoreRecLeft);\n              arr[i].push(0);\n\n              rows[i].children[j].classList\n                .remove(`field-cell--${secondNumberCurrentLeft}`);\n\n              rows[i].children[j - 1].classList\n                .remove(`field-cell--${secondNumberPrevLeft}`);\n            }\n          }\n\n          if (arr[i][j] > 0) {\n            countNumbersLeft++;\n          }\n        }\n      }\n\n      for (let i = 0; i < arr.length; i++) {\n        for (let j = 0; j < arr[i].length; j++) {\n          if (arr[i][j] === 0) {\n            if (rows[i].children[j].innerText !== '') {\n              rows[i].children[j].classList\n                .remove(`field-cell--${rows[i].children[j].innerText}`);\n              rows[i].children[j].innerText = '';\n            } else {\n              rows[i].children[j].innerText = '';\n            }\n          } else {\n            rows[i].children[j].classList\n              .remove(`field-cell--${rows[i].children[j].innerText}`);\n            rows[i].children[j].innerText = arr[i][j];\n\n            rows[i].children[j].classList\n              .add(`field-cell--${rows[i].children[j].innerText}`);\n          }\n        }\n      }\n\n      for (const cell of cells) {\n        if (cell.innerText === '2048') {\n          textWin.classList.remove('hidden');\n        }\n      }\n\n      let z = Math.floor(Math.random() * cells.length + 1);\n\n      if (cells[z - 1].innerText !== undefined\n        && cells[z - 1].innerText !== '') {\n        z = randomMain();\n      }\n\n      placingWithProbability(z);\n      placing(z);\n\n      if (countNumbersLeft === 16) {\n        const checkHorizontal = checkHorizontalAudit(arr);\n        const checkVertical = checkVerticalAudit(arr);\n\n        if (checkHorizontal === undefined && checkVertical === undefined) {\n          textLose.classList.remove('hidden');\n        }\n      }\n    } else if (JSON.stringify(part) === JSON.stringify(arr)) {\n      let countPairNumbers = 0;\n\n      for (let i = 0; i < arr.length; i++) {\n        for (let j = 0; j < arr[i].length; j++) {\n          if (arr[i][j] > 0 && arr[i][j - 1] > 0) {\n            if (arr[i][j - 1] === arr[i][j] && arr[i][j - 1] !== undefined) {\n              countPairNumbers++;\n            }\n          }\n        }\n      }\n\n      if (countPairNumbers > 0) {\n        let countNumbersLeft = 1;\n\n        for (let i = 0; i < arr.length; i++) {\n          for (let j = 0; j < arr[i].length; j++) {\n            if (arr[i][j] > 0 && arr[i][j - 1] > 0) {\n              if (arr[i][j - 1] === arr[i][j] && arr[i][j - 1] !== undefined) {\n                const secondNumberPrevLeft = arr[i][j - 1];\n                const secondNumberCurrentLeft = arr[i][j];\n\n                arr[i][j - 1] = arr[i][j] * 2;\n                arr[i].splice(j, 1);\n\n                const scoreRecLeft = score.innerText;\n\n                score.innerText = secondNumberPrevLeft * 2\n                  + Number(scoreRecLeft);\n                arr[i].push(0);\n\n                rows[i].children[j].classList\n                  .remove(`field-cell--${secondNumberCurrentLeft}`);\n\n                rows[i].children[j - 1].classList\n                  .remove(`field-cell--${secondNumberPrevLeft}`);\n              }\n            }\n\n            if (arr[i][j] > 0) {\n              countNumbersLeft++;\n            }\n          }\n        }\n\n        for (let i = 0; i < arr.length; i++) {\n          for (let j = 0; j < arr[i].length; j++) {\n            if (arr[i][j] === 0) {\n              if (rows[i].children[j].innerText !== '') {\n                rows[i].children[j].classList\n                  .remove(`field-cell--${rows[i].children[j].innerText}`);\n                rows[i].children[j].innerText = '';\n              } else {\n                rows[i].children[j].innerText = '';\n              }\n            } else {\n              rows[i].children[j].classList\n                .remove(`field-cell--${rows[i].children[j].innerText}`);\n              rows[i].children[j].innerText = arr[i][j];\n\n              rows[i].children[j].classList\n                .add(`field-cell--${rows[i].children[j].innerText}`);\n            }\n          }\n        }\n\n        for (const cell of cells) {\n          if (cell.innerText === '2048') {\n            textWin.classList.remove('hidden');\n          }\n        }\n\n        let z = Math.floor(Math.random() * cells.length + 1);\n\n        if (cells[z - 1].innerText !== undefined\n          && cells[z - 1].innerText !== '') {\n          z = randomMain();\n        }\n\n        placingWithProbability(z);\n        placing(z);\n\n        if (countNumbersLeft === 16) {\n          const checkHorizontal = checkHorizontalAudit(arr);\n          const checkVertical = checkVerticalAudit(arr);\n\n          if (checkHorizontal === undefined && checkVertical === undefined) {\n            textLose.classList.remove('hidden');\n          }\n        }\n      }\n    }\n  }\n\n  if (e.key === 'ArrowRight') {\n    const part = JSON.parse(JSON.stringify(arr));\n\n    for (let i = 0; i < arr.length; i++) {\n      arr[i].sort(function sortRight(x, y) {\n        if (x > 0 && y > 0) {\n\n        } else {\n          return x - y;\n        }\n      });\n    }\n\n    if (JSON.stringify(part) !== JSON.stringify(arr)) {\n      let countNumbersRight = 1;\n\n      for (let i = 0; i < arr.length; i++) {\n        for (let j = arr[i].length - 1; j >= 0; j--) {\n          if (arr[i][j] > 0 && arr[i][j + 1] > 0) {\n            if (arr[i][j] === arr[i][j + 1] && arr[i][j + 1] !== undefined) {\n              const secondNumberNextRight = arr[i][j + 1];\n              const secondNumberCurrentRight = arr[i][j];\n\n              arr[i][j + 1] = arr[i][j] * 2;\n              arr[i].splice(j, 1);\n\n              const scoreRecRight = score.innerText;\n\n              score.innerText = secondNumberNextRight * 2\n                + Number(scoreRecRight);\n              arr[i].unshift(0);\n\n              rows[i].children[j].classList\n                .remove(`field-cell--${secondNumberCurrentRight}`);\n\n              rows[i].children[j + 1].classList\n                .remove(`field-cell--${secondNumberNextRight}`);\n            }\n          }\n\n          if (arr[i][j] > 0) {\n            countNumbersRight++;\n          }\n        }\n      }\n\n      for (let i = 0; i < arr.length; i++) {\n        for (let j = 0; j < arr[i].length; j++) {\n          if (arr[i][j] === 0) {\n            if (rows[i].children[j].innerText !== '') {\n              rows[i].children[j].classList\n                .remove(`field-cell--${rows[i].children[j].innerText}`);\n              rows[i].children[j].innerText = '';\n            } else {\n              rows[i].children[j].innerText = '';\n            }\n          } else {\n            rows[i].children[j].classList\n              .remove(`field-cell--${rows[i].children[j].innerText}`);\n            rows[i].children[j].innerText = arr[i][j];\n\n            rows[i].children[j].classList\n              .add(`field-cell--${rows[i].children[j].innerText}`);\n          }\n        }\n      }\n\n      for (const cell of cells) {\n        if (cell.innerText === '2048') {\n          textWin.classList.remove('hidden');\n        }\n      }\n\n      let z = Math.floor(Math.random() * cells.length + 1);\n\n      if (cells[z - 1].innerText !== undefined\n        && cells[z - 1].innerText !== '') {\n        z = randomMain();\n      }\n\n      placingWithProbability(z);\n      placing(z);\n\n      if (countNumbersRight === 16) {\n        const checkHorizontal = checkHorizontalAudit(arr);\n        const checkVertical = checkVerticalAudit(arr);\n\n        if (checkHorizontal === undefined && checkVertical === undefined) {\n          textLose.classList.remove('hidden');\n        }\n      }\n    } else if (JSON.stringify(part) === JSON.stringify(arr)) {\n      let countPairNumbers = 0;\n\n      for (let i = 0; i < arr.length; i++) {\n        for (let j = 0; j < arr[i].length; j++) {\n          if (arr[i][j] > 0 && arr[i][j + 1] > 0) {\n            if (arr[i][j + 1] === arr[i][j] && arr[i][j + 1] !== undefined) {\n              countPairNumbers++;\n            }\n          }\n        }\n      }\n\n      if (countPairNumbers > 0) {\n        let countNumbersRight = 1;\n\n        for (let i = 0; i < arr.length; i++) {\n          for (let j = arr[i].length - 1; j >= 0; j--) {\n            if (arr[i][j] > 0 && arr[i][j + 1] > 0) {\n              if (arr[i][j] === arr[i][j + 1] && arr[i][j + 1] !== undefined) {\n                const secondNumberNextRight = arr[i][j + 1];\n                const secondNumberCurrentRight = arr[i][j];\n\n                arr[i][j + 1] = arr[i][j] * 2;\n                arr[i].splice(j, 1);\n\n                const scoreRecRight = score.innerText;\n\n                score.innerText = secondNumberNextRight * 2\n                  + Number(scoreRecRight);\n                arr[i].unshift(0);\n\n                rows[i].children[j].classList\n                  .remove(`field-cell--${secondNumberCurrentRight}`);\n\n                rows[i].children[j + 1].classList\n                  .remove(`field-cell--${secondNumberNextRight}`);\n              }\n            }\n\n            if (arr[i][j] > 0) {\n              countNumbersRight++;\n            }\n          }\n        }\n\n        for (let i = 0; i < arr.length; i++) {\n          for (let j = 0; j < arr[i].length; j++) {\n            if (arr[i][j] === 0) {\n              if (rows[i].children[j].innerText !== '') {\n                rows[i].children[j].classList\n                  .remove(`field-cell--${rows[i].children[j].innerText}`);\n                rows[i].children[j].innerText = '';\n              } else {\n                rows[i].children[j].innerText = '';\n              }\n            } else {\n              rows[i].children[j].classList\n                .remove(`field-cell--${rows[i].children[j].innerText}`);\n              rows[i].children[j].innerText = arr[i][j];\n\n              rows[i].children[j].classList\n                .add(`field-cell--${rows[i].children[j].innerText}`);\n            }\n          }\n        }\n\n        for (const cell of cells) {\n          if (cell.innerText === '2048') {\n            textWin.classList.remove('hidden');\n          }\n        }\n\n        let z = Math.floor(Math.random() * cells.length + 1);\n\n        if (cells[z - 1].innerText !== undefined\n          && cells[z - 1].innerText !== '') {\n          z = randomMain();\n        }\n\n        placingWithProbability(z);\n        placing(z);\n\n        if (countNumbersRight === 16) {\n          const checkHorizontal = checkHorizontalAudit(arr);\n          const checkVertical = checkVerticalAudit(arr);\n\n          if (checkHorizontal === undefined && checkVertical === undefined) {\n            textLose.classList.remove('hidden');\n          }\n        }\n      }\n    }\n  }\n\n  if (e.key === 'ArrowUp') {\n    const part = JSON.parse(JSON.stringify(arr));\n\n    for (let i = 0; i < rows.length; i++) {\n      const mass = [arr[0][i], arr[1][i], arr[2][i], arr[3][i]];\n\n      mass.sort(function sortLeft(x, y) {\n        if (x > 0 && y > 0) {\n\n        } else {\n          return y - x;\n        }\n      });\n      arr[0][i] = mass[0];\n      arr[1][i] = mass[1];\n      arr[2][i] = mass[2];\n      arr[3][i] = mass[3];\n    }\n\n    if (JSON.stringify(part) !== JSON.stringify(arr)) {\n      let countNumbersUp = 1;\n\n      for (let i = 0; i < rows.length; i++) {\n        const arraY = [arr[0][i], arr[1][i], arr[2][i], arr[3][i]];\n\n        for (let j = 0; j < arraY.length; j++) {\n          if (arraY[j] > 0 && arraY[j - 1] > 0) {\n            if (arraY[j - 1] === arraY[j] && arraY[j - 1] !== undefined) {\n              const secondNumberPrevUp = arraY[j - 1];\n              const secondNumberCurrentUp = arraY[j];\n\n              arraY[j - 1] = arraY[j] * 2;\n              arraY.splice(j, 1);\n\n              const scoreRecUp = score.innerText;\n\n              score.innerText = secondNumberPrevUp * 2 + Number(scoreRecUp);\n              arraY.push(0);\n\n              rows[j - 1].children[i].classList\n                .remove(`field-cell--${secondNumberPrevUp}`);\n\n              rows[j].children[i].classList\n                .remove(`field-cell--${secondNumberCurrentUp}`);\n            }\n          }\n          arr[0][i] = arraY[0];\n          arr[1][i] = arraY[1];\n          arr[2][i] = arraY[2];\n          arr[3][i] = arraY[3];\n        }\n      }\n\n      for (let i = 0; i < arr.length; i++) {\n        for (let j = 0; j < arr[i].length; j++) {\n          if (arr[i][j] === 0) {\n            if (rows[i].children[j].innerText !== '') {\n              rows[i].children[j].classList\n                .remove(`field-cell--${rows[i].children[j].innerText}`);\n              rows[i].children[j].innerText = '';\n            } else {\n              rows[i].children[j].innerText = '';\n            }\n          } else {\n            countNumbersUp++;\n\n            rows[i].children[j].classList\n              .remove(`field-cell--${rows[i].children[j].innerText}`);\n            rows[i].children[j].innerText = arr[i][j];\n\n            rows[i].children[j].classList\n              .add(`field-cell--${rows[i].children[j].innerText}`);\n          }\n        }\n      }\n\n      for (const cell of cells) {\n        if (cell.innerText === '2048') {\n          textWin.classList.remove('hidden');\n        }\n      }\n\n      let z = Math.floor(Math.random() * cells.length + 1);\n\n      if (cells[z - 1].innerText !== undefined\n        && cells[z - 1].innerText !== '') {\n        z = randomMain();\n      }\n\n      placingWithProbability(z);\n      placing(z);\n\n      if (countNumbersUp === 16) {\n        const checkHorizontal = checkHorizontalAudit(arr);\n        const checkVertical = checkVerticalAudit(arr);\n\n        if (checkHorizontal === undefined && checkVertical === undefined) {\n          textLose.classList.remove('hidden');\n        }\n      }\n    } else if (JSON.stringify(part) === JSON.stringify(arr)) {\n      let countPairNumbers = 0;\n\n      for (let i = 0; i < rows.length; i++) {\n        const arraY = [arr[0][i], arr[1][i], arr[2][i], arr[3][i]];\n\n        for (let j = 0; j < arraY.length; j++) {\n          if (arraY[j] > 0 && arraY[j - 1] > 0) {\n            if (arraY[j - 1] === arraY[j] && arraY[j - 1] !== undefined) {\n              countPairNumbers++;\n            }\n          }\n        }\n      }\n\n      if (countPairNumbers > 0) {\n        let countNumbersUp = 1;\n\n        for (let i = 0; i < rows.length; i++) {\n          const arraY = [arr[0][i], arr[1][i], arr[2][i], arr[3][i]];\n\n          for (let j = 0; j < arraY.length; j++) {\n            if (arraY[j] > 0 && arraY[j - 1] > 0) {\n              if (arraY[j - 1] === arraY[j] && arraY[j - 1] !== undefined) {\n                const secondNumberPrevUp = arraY[j - 1];\n                const secondNumberCurrentUp = arraY[j];\n\n                arraY[j - 1] = arraY[j] * 2;\n                arraY.splice(j, 1);\n\n                const scoreRecUp = score.innerText;\n\n                score.innerText = secondNumberPrevUp * 2 + Number(scoreRecUp);\n                arraY.push(0);\n\n                rows[j - 1].children[i].classList\n                  .remove(`field-cell--${secondNumberPrevUp}`);\n\n                rows[j].children[i].classList\n                  .remove(`field-cell--${secondNumberCurrentUp}`);\n              }\n            }\n            arr[0][i] = arraY[0];\n            arr[1][i] = arraY[1];\n            arr[2][i] = arraY[2];\n            arr[3][i] = arraY[3];\n          }\n        }\n\n        for (let i = 0; i < arr.length; i++) {\n          for (let j = 0; j < arr[i].length; j++) {\n            if (arr[i][j] === 0) {\n              if (rows[i].children[j].innerText !== '') {\n                rows[i].children[j].classList\n                  .remove(`field-cell--${rows[i].children[j].innerText}`);\n                rows[i].children[j].innerText = '';\n              } else {\n                rows[i].children[j].innerText = '';\n              }\n            } else {\n              countNumbersUp++;\n\n              rows[i].children[j].classList\n                .remove(`field-cell--${rows[i].children[j].innerText}`);\n              rows[i].children[j].innerText = arr[i][j];\n\n              rows[i].children[j].classList\n                .add(`field-cell--${rows[i].children[j].innerText}`);\n            }\n          }\n        }\n\n        for (const cell of cells) {\n          if (cell.innerText === '2048') {\n            textWin.classList.remove('hidden');\n          }\n        }\n\n        let z = Math.floor(Math.random() * cells.length + 1);\n\n        if (cells[z - 1].innerText !== undefined\n          && cells[z - 1].innerText !== '') {\n          z = randomMain();\n        }\n\n        placingWithProbability(z);\n        placing(z);\n\n        if (countNumbersUp === 16) {\n          const checkHorizontal = checkHorizontalAudit(arr);\n          const checkVertical = checkVerticalAudit(arr);\n\n          if (checkHorizontal === undefined && checkVertical === undefined) {\n            textLose.classList.remove('hidden');\n          }\n        }\n      }\n    }\n  }\n\n  if (e.key === 'ArrowDown') {\n    const part = JSON.parse(JSON.stringify(arr));\n\n    for (let i = 0; i < rows.length; i++) {\n      const mass = [arr[0][i], arr[1][i], arr[2][i], arr[3][i]];\n\n      mass.sort(function sortRight(x, y) {\n        if (x > 0 && y > 0) {\n\n        } else {\n          return x - y;\n        }\n      });\n      arr[0][i] = mass[0];\n      arr[1][i] = mass[1];\n      arr[2][i] = mass[2];\n      arr[3][i] = mass[3];\n    }\n\n    if (JSON.stringify(part) !== JSON.stringify(arr)) {\n      let countNumbersDown = 1;\n\n      for (let i = 0; i < rows.length; i++) {\n        const arraY = [arr[0][i], arr[1][i], arr[2][i], arr[3][i]];\n\n        for (let j = arraY.length - 1; j >= 0; j--) {\n          if (arraY[j] > 0 && arraY[j + 1] > 0) {\n            if (arraY[j] === arraY[j + 1] && arraY[j + 1] !== undefined) {\n              const secondNumberNextDown = arraY[j + 1];\n              const secondNumberCurrentDown = arraY[j];\n\n              arraY[j + 1] = arraY[j] * 2;\n              arraY.splice(j, 1);\n\n              const scoreRecDown = score.innerText;\n\n              score.innerText = secondNumberNextDown * 2 + Number(scoreRecDown);\n              arraY.unshift(0);\n\n              rows[j + 1].children[i].classList\n                .remove(`field-cell--${secondNumberNextDown}`);\n\n              rows[j].children[i].classList\n                .remove(`field-cell--${secondNumberCurrentDown}`);\n            }\n          }\n          arr[0][i] = arraY[0];\n          arr[1][i] = arraY[1];\n          arr[2][i] = arraY[2];\n          arr[3][i] = arraY[3];\n        }\n      }\n\n      for (let i = 0; i < arr.length; i++) {\n        for (let j = 0; j < arr[i].length; j++) {\n          if (arr[i][j] === 0) {\n            if (rows[i].children[j].innerText !== '') {\n              rows[i].children[j].classList\n                .remove(`field-cell--${rows[i].children[j].innerText}`);\n              rows[i].children[j].innerText = '';\n            } else {\n              rows[i].children[j].innerText = '';\n            }\n          } else {\n            countNumbersDown++;\n\n            rows[i].children[j].classList\n              .remove(`field-cell--${rows[i].children[j].innerText}`);\n            rows[i].children[j].innerText = arr[i][j];\n\n            rows[i].children[j].classList\n              .add(`field-cell--${rows[i].children[j].innerText}`);\n          }\n        }\n      }\n\n      for (const cell of cells) {\n        if (cell.innerText === '2048') {\n          textWin.classList.remove('hidden');\n        }\n      }\n\n      let z = Math.floor(Math.random() * cells.length + 1);\n\n      if (cells[z - 1].innerText !== undefined\n        && cells[z - 1].innerText !== '') {\n        z = randomMain();\n      }\n\n      placingWithProbability(z);\n      placing(z);\n\n      if (countNumbersDown === 16) {\n        const checkHorizontal = checkHorizontalAudit(arr);\n        const checkVertical = checkVerticalAudit(arr);\n\n        if (checkHorizontal === undefined && checkVertical === undefined) {\n          textLose.classList.remove('hidden');\n        }\n      }\n    } else if (JSON.stringify(part) === JSON.stringify(arr)) {\n      let countPairNumbers = 0;\n\n      for (let i = 0; i < rows.length; i++) {\n        const arraY = [arr[0][i], arr[1][i], arr[2][i], arr[3][i]];\n\n        for (let j = arraY.length - 1; j >= 0; j--) {\n          if (arraY[j] > 0 && arraY[j + 1] > 0) {\n            if (arraY[j] === arraY[j + 1] && arraY[j + 1] !== undefined) {\n              countPairNumbers++;\n            }\n          }\n        }\n      }\n\n      if (countPairNumbers > 0) {\n        let countNumbersDown = 1;\n\n        for (let i = 0; i < rows.length; i++) {\n          const arraY = [arr[0][i], arr[1][i], arr[2][i], arr[3][i]];\n\n          for (let j = arraY.length - 1; j >= 0; j--) {\n            if (arraY[j] > 0 && arraY[j + 1] > 0) {\n              if (arraY[j] === arraY[j + 1] && arraY[j + 1] !== undefined) {\n                const secondNumberNextDown = arraY[j + 1];\n                const secondNumberCurrentDown = arraY[j];\n\n                arraY[j + 1] = arraY[j] * 2;\n                arraY.splice(j, 1);\n\n                const scoreRecDown = score.innerText;\n\n                score.innerText = secondNumberNextDown * 2\n                  + Number(scoreRecDown);\n                arraY.unshift(0);\n\n                rows[j + 1].children[i].classList\n                  .remove(`field-cell--${secondNumberNextDown}`);\n\n                rows[j].children[i].classList\n                  .remove(`field-cell--${secondNumberCurrentDown}`);\n              }\n            }\n            arr[0][i] = arraY[0];\n            arr[1][i] = arraY[1];\n            arr[2][i] = arraY[2];\n            arr[3][i] = arraY[3];\n          }\n        }\n\n        for (let i = 0; i < arr.length; i++) {\n          for (let j = 0; j < arr[i].length; j++) {\n            if (arr[i][j] === 0) {\n              if (rows[i].children[j].innerText !== '') {\n                rows[i].children[j].classList\n                  .remove(`field-cell--${rows[i].children[j].innerText}`);\n                rows[i].children[j].innerText = '';\n              } else {\n                rows[i].children[j].innerText = '';\n              }\n            } else {\n              countNumbersDown++;\n\n              rows[i].children[j].classList\n                .remove(`field-cell--${rows[i].children[j].innerText}`);\n              rows[i].children[j].innerText = arr[i][j];\n\n              rows[i].children[j].classList\n                .add(`field-cell--${rows[i].children[j].innerText}`);\n            }\n          }\n        }\n\n        for (const cell of cells) {\n          if (cell.innerText === '2048') {\n            textWin.classList.remove('hidden');\n          }\n        }\n\n        let z = Math.floor(Math.random() * cells.length + 1);\n\n        if (cells[z - 1].innerText !== undefined\n          && cells[z - 1].innerText !== '') {\n          z = randomMain();\n        }\n\n        placingWithProbability(z);\n        placing(z);\n\n        if (countNumbersDown === 16) {\n          const checkHorizontal = checkHorizontalAudit(arr);\n          const checkVertical = checkVerticalAudit(arr);\n\n          if (checkHorizontal === undefined && checkVertical === undefined) {\n            textLose.classList.remove('hidden');\n          }\n        }\n      }\n    }\n  }\n});\n\nfunction checkHorizontalAudit(elem) {\n  for (let i = 0; i < elem.length; i++) {\n    for (let j = 1; j < elem[i].length; j++) {\n      if (elem[i][j] === elem[i][j - 1]) {\n        return false;\n      }\n    }\n  }\n}\n\nfunction checkVerticalAudit(elem) {\n  for (let i = 0; i < rows.length; i++) {\n    const massFunc = [elem[0][i], elem[1][i], elem[2][i], elem[3][i]];\n\n    for (let j = 1; j < massFunc.length; j++) {\n      if (massFunc[j] === massFunc[j - 1]) {\n        return false;\n      }\n    }\n  }\n}\n\nfunction randomMain() {\n  const a = Math.floor(Math.random() * cells.length + 1);\n\n  if (cells[a - 1].innerText !== '') {\n    return randomMain();\n  } else {\n    return a;\n  }\n}\n\nfunction random(x) {\n  const y = Math.floor(Math.random() * cells.length + 1);\n\n  if (x === y) {\n    return random(x);\n  } else {\n    return y;\n  }\n}\n\nfunction placing(a) {\n  if (a > 0 && a <= 4) {\n    arr[0][a - 1] = Number(cells[a - 1].innerHTML);\n  } else if (a > 4 && a <= 8) {\n    arr[1][cells[a - 1].cellIndex] = Number(cells[a - 1].innerHTML);\n  } else if (a > 8 && a <= 12) {\n    arr[2][cells[a - 1].cellIndex] = Number(cells[a - 1].innerHTML);\n  } else if (a > 12) {\n    arr[3][cells[a - 1].cellIndex] = Number(cells[a - 1].innerHTML);\n  }\n}\n\nfunction placingWithProbability(b) {\n  if (b >= 15) {\n    cells[b - 1].classList.add('field-cell--4');\n    cells[b - 1].innerText = '4';\n  } else {\n    cells[b - 1].classList.add('field-cell--2');\n    cells[b - 1].innerText = '2';\n  }\n}\n\nstart.addEventListener('click', (e) => {\n  const item = e.target;\n\n  if (item.classList.contains('start')) {\n    const x = Math.floor(Math.random() * cells.length + 1);\n    const y = random(x);\n\n    placingWithProbability(x);\n    placingWithProbability(y);\n    start.classList.add('restart');\n    start.innerText = 'Restart';\n    start.classList.remove('start');\n    textStart.setAttribute('hidden', '');\n    placing(x);\n    placing(y);\n  } else if (item.classList.contains('restart')) {\n    score.innerText = 0;\n    textLose.classList.add('hidden');\n\n    for (let r = 0; r < arr.length; r++) {\n      for (let c = 0; c < arr[r].length; c++) {\n        arr[r][c] = 0;\n      }\n    }\n\n    for (const cell of cells) {\n      cell.classList.remove(`field-cell--${cell.innerText}`);\n      cell.innerText = '';\n    }\n\n    const x = Math.floor(Math.random() * cells.length + 1);\n    const y = random(x);\n\n    placingWithProbability(x);\n    placingWithProbability(y);\n    placing(x);\n    placing(y);\n  }\n});\n"]}